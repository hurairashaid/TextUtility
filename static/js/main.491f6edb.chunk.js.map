{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","class","onClick","changedesign","role","changeMode","htmlFor","Textform","useState","text","setText","heading","value","onChange","event","target","rows","toUpperCase","showalert","toLowerCase","get","toLowercase","split","i","length","join","Alert","alert","message","defaultProps","About","border","backgroundColor","color","styleVersion","newStyle","btnmode","newbtnmode","style","App","setMode","setalert","setTimeout","document","body","design","path","element","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.491f6edb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${\n        props.mode === \"light\" ? \"light\" : \"dark\"\n      } bg-${props.mode}\n`}\n    >\n      <div className=\"container-fluid \">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active \" aria-current=\"page\" to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                {props.aboutText}\n              </Link>\n            </li>\n          </ul>\n          <div class=\"mx-3 my-2\">\n            <button\n              type=\"button\"\n              class=\"btn btn-success btn-circle btn-xl mx-1\"\n              onClick={() => props.changedesign(\"green\")}\n            >\n              {\" \"}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-danger btn-circle btn-xl mx-1\"\n              onClick={() => props.changedesign(\"red\")}\n            >\n              {\" \"}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-warning btn-circle btn-xl mx-1 \"\n              onClick={() => props.changedesign(\"yellow\")}\n            >\n              {\" \"}\n            </button>\n          </div>\n          <div\n            className={`form-check form-switch text-${\n              props.mode === \"dark\" ? \"light\" : \"dark\"\n            }`}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n              onClick={props.changeMode}\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Dark mode Enabled\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.defaultProps = {\n  title: \"title please\",\n  aboutText: \"abot text here\"\n};\n","import React, { useState } from \"react\";\n\nexport default function Textform(props) {\n  const [text, setText] = useState(\"Enter your text here\");\n  function handlerToUpperCase() {\n    setText(text.toUpperCase());\n    props.showalert(\"change to upper case\", \"success\");\n  }\n  function newText(event) {\n    setText(event.target.value);\n  }\n  function handlerToLowerCase() {\n    setText(text.toLowerCase());\n    props.showalert(\"change to Lower case\", \"success\");\n  }\n  function handlerToCapitalLetter() {\n    var get = text.toLowercase().split(\"\");\n    for (let i = 0; i < get.length; i++) {\n      if (i == 0 || get[i - 1] == \" \") {\n        get[i] = get[i].toUpperCase();\n      }\n    }\n    setText(get.join(\"\"));\n    props.showalert(\"change to First letter capital\", \"success\");\n  }\n  return (\n    <>\n      <div className={`my-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\n        <h1>{props.heading}</h1>\n        <div\n          className={`mb-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}\n        >\n          <textarea\n            className={`form-control bg-${props.mode} text-${\n              props.mode === \"light\" ? \"dark\" : \"light\"\n            }`}\n            value={text}\n            onChange={newText}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n          <div className=\"my-3\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handlerToUpperCase}\n            >\n              Convert To UpperCase\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mx-3\"\n              onClick={handlerToLowerCase}\n            >\n              Convert To LowerCase\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mx-3\"\n              onClick={handlerToCapitalLetter}\n            >\n              Convert To capital letter\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className={`my-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\n        <h2>Your Text Summary</h2>\n        <p>\n          {text.split(\" \").length - 1} words and {text.split(\"\").length}{\" \"}\n          character\n        </p>\n      </div>\n      <div className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\n        <h2>Previews</h2>\n        <p>{text}</p>\n      </div>\n    </>\n  );\n}\n","export default function Alert(props) {\n  return (\n    props.alert && (\n      <div\n        class={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{props.alert.type}</strong> {props.alert.message}.\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"alert\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n    )\n  );\n}\n","import { useState } from \"react\";\n\nexport default function About() {\n  const [styleVersion, newStyle] = useState({\n    border: \"0.2px solid #1c1d1f\",\n    backgroundColor: \"white\",\n    color: \"1c1d1f\"\n  });\n  let [btnmode, newbtnmode] = useState(\"Dark\");\n  function toggleStyle() {\n    if (styleVersion.color === \"white\") {\n      newStyle({\n        border: \"0.5px solid #1c1d1f\",\n        backgroundColor: \"white\",\n        color: \"#1c1d1f\"\n      });\n      newbtnmode(\"Dark\");\n    } else {\n      newStyle({\n        border: \"0.5px solid white\",\n        backgroundColor: \"#1c1d1f\",\n        color: \"white\"\n      });\n      newbtnmode(\"Light\");\n    }\n  }\n  return (\n    <div className=\"container my-3\" style={styleVersion}>\n      <h1 className=\"my-3\">About Our Company</h1>\n      <div\n        className=\"accordion accordion-flush\"\n        id=\"accordionFlushExample\"\n        style={styleVersion}\n      >\n        <div className=\"accordion-item\" style={styleVersion}>\n          <h2\n            className=\"accordion-header\"\n            id=\"flush-headingOne\"\n            style={styleVersion}\n          >\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseOne\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseOne\"\n              style={styleVersion}\n            >\n              Accordion Item #1\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseOne\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingOne\"\n            data-bs-parent=\"#accordionFlushExample\"\n            style={styleVersion}\n          >\n            <div className=\"accordion-body\" style={styleVersion}>\n              Placeholder content for this accordion, which is intended to\n              demonstrate the <code>.accordion-flush</code> class. This is the\n              first item's accordion body.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={styleVersion}>\n          <h2\n            className=\"accordion-header\"\n            id=\"flush-headingTwo\"\n            style={styleVersion}\n          >\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseTwo\"\n              style={styleVersion}\n            >\n              Accordion Item #2\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingTwo\"\n            data-bs-parent=\"#accordionFlushExample\"\n            style={styleVersion}\n          >\n            <div className=\"accordion-body\" style={styleVersion}>\n              Placeholder content for this accordion, which is intended to\n              demonstrate the <code>.accordion-flush</code> class. This is the\n              second item's accordion body. Let's imagine this being filled with\n              some actual content.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={styleVersion}>\n          <h2\n            className=\"accordion-header\"\n            id=\"flush-headingThree\"\n            style={styleVersion}\n          >\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseThree\"\n              style={styleVersion}\n            >\n              Accordion Item #3\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingThree\"\n            data-bs-parent=\"#accordionFlushExample\"\n            style={styleVersion}\n          >\n            <div className=\"accordion-body\" style={styleVersion}>\n              Placeholder content for this accordion, which is intended to\n              demonstrate the <code>.accordion-flush</code> class. This is the\n              third item's accordion body. Nothing more exciting happening here\n              in terms of content, but just filling up the space to make it\n              look, at least at first glance, a bit more representative of how\n              this would look in a real-world application.\n            </div>\n          </div>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-primary my-3\" onClick={toggleStyle}>\n        connvet to {btnmode} mode\n      </button>\n    </div>\n  );\n}\n","import \"./styles.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport About from \"./components/About\";\n\nexport default function App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n\n  function showalert(message, type) {\n    setalert({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n  function changedesign(design) {\n    if (design === \"red\") {\n      document.body.style.backgroundColor = \"#fc0f03\";\n      setMode(\"danger\");\n    } else if (design === \"green\") {\n      document.body.style.backgroundColor = \"#27b50b\";\n      setMode(\"success\");\n    } else if (design === \"yellow\") {\n      document.body.style.backgroundColor = \"#c5d11b\";\n      setMode(\"warning\");\n    }\n  }\n  function changeMode() {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#161716\";\n      document.title = \"Dark Mode\";\n      showalert(\"Dark Mode Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"Light Mode\";\n      showalert(\"Light Mode Enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n        <Navbar\n          title=\"Text Corner \"\n          aboutText=\"About Myself\"\n          mode={mode}\n          changeMode={changeMode}\n          changedesign={changedesign}\n        />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/About\" element={<About />} />\n            <Route path=\"/\" element={<Textform\n                showalert={showalert}\n                heading=\"Enter Your's Text To Analyiz\"\n                mode={mode}\n              />} />\n          </Routes>    \n        </div>\n    </Router>    \n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}