{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","class","onClick","changedesign","role","changeMode","toggleStyle","htmlFor","Textform","useState","text","setText","minute","second","a","split","filter","element","length","parseInt","heading","value","onChange","event","target","rows","toUpperCase","showalert","toLowerCase","get","i","join","Alert","alert","message","defaultProps","About","Props","console","log","StyleVersion","style","StyleVerion","App","backgroundColor","color","styleVersion","newStyle","newbtnmode","setMode","setalert","setTimeout","document","body","design","border","height","path","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3df7abfa.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  function DarkModeSwitch() {\n    props.changeMode();\n    props.toggleStyle();\n  }\n\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${\n        props.mode === \"light\" ? \"light\" : \"dark\"\n      } bg-${props.mode}\n`}\n    >\n      <div className=\"container-fluid \">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/\">\n                Home\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/about\">\n                {props.aboutText}\n              </NavLink>\n            </li>\n          </ul>\n          <div class=\"mx-3 my-2\">\n            <button\n              type=\"button\"\n              class=\"btn btn-success btn-circle btn-xl mx-1\"\n              onClick={() => props.changedesign(\"green\")}\n            >\n              {\" \"}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-danger btn-circle btn-xl mx-1\"\n              onClick={() => props.changedesign(\"red\")}\n            >\n              {\" \"}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-warning btn-circle btn-xl mx-1 \"\n              onClick={() => props.changedesign(\"yellow\")}\n            >\n              {\" \"}\n            </button>\n          </div>\n          <div\n            className={`form-check form-switch text-${\n              props.mode === \"dark\" ? \"light\" : \"dark\"\n            }`}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n              onClick={DarkModeSwitch}\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Dark mode Enabled\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.defaultProps = {\n  title: \"title please\",\n  aboutText: \"abot text here\"\n};\n","import React, { useState } from \"react\";\n\nexport default function Textform(props) {\n  const [text, setText] = useState(\"Enter your text here\");\n  function handlerToUpperCase() {\n    setText(text.toUpperCase());\n    props.showalert(\"change to upper case\", \"success\");\n  }\n  function newText(event) {\n    setText(event.target.value);\n  }\n  function handlerToLowerCase() {\n    setText(text.toLowerCase());\n    props.showalert(\"change to Lower case\", \"success\");\n  }\n  function handlerToCapitalLetter() {\n    var get = text.toLowerCase().split(\"\");\n    for (let i = 0; i < get.length; i++) {\n      if (i === 0 || get[i - 1] === \" \") {\n        get[i] = get[i].toUpperCase();\n      }\n    }\n    setText(get.join(\"\"));\n    props.showalert(\"change to First letter capital\", \"success\");\n  }\n  function cleartext() {\n    setText(\"\");\n  }\n  let minute = 0;\n  let second = 0;\n  const a =\n    text.split(\" \").filter((element) => {\n      return element.length !== 0;\n    }).length * 0.24;\n  if (a > 60) {\n    minute = parseInt(a / 60, 10);\n    second = a % 60;\n  } else {\n    second = a;\n  }\n  return (\n    <>\n      <div className={`my-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\n        <h1>{props.heading}</h1>\n        <div\n          className={`mb-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}\n        >\n          <textarea\n            className={`form-control bg-${props.mode} text-${\n              props.mode === \"light\" ? \"dark\" : \"light\"\n            }`}\n            value={text}\n            onChange={newText}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n          <div className=\"my-3\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mx-2 my-2\"\n              onClick={handlerToUpperCase}\n            >\n              Convert To UpperCase\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mx-2 my-2\"\n              onClick={handlerToLowerCase}\n            >\n              Convert To LowerCase\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mx-2 my-2\"\n              onClick={handlerToCapitalLetter}\n            >\n              Convert To capital letter\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mx-2 my-2\"\n              onClick={cleartext}\n            >\n              Clear Wrtitten text\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className={`my-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\n        <h2>Your Text Summary</h2>\n        <p>\n          {\n            text.split(\" \").filter((element) => {\n              return element.length !== 0;\n            }).length\n          }{\" \"}\n          words and {text.split(\"\").length} character\n        </p>\n        <p>\n          Time Required to Read This {minute} Minute & {second} Second\n        </p>\n      </div>\n      <div className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\n        <h2>Previews</h2>\n        <p>{text}</p>\n      </div>\n    </>\n  );\n}\n","export default function Alert(props) {\n  return (\n    props.alert && (\n      <div\n        class={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{props.alert.type}</strong> {props.alert.message}.\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"alert\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n    )\n  );\n}\n","export default function About(Props) {\n  console.log(Props.StyleVersion);\n  return (\n    <div className=\"container my-3\" style={Props.StyleVersion}>\n      <h1 className=\"my-3\">Information About TextUtility</h1>\n      <div\n        className=\"accordion accordion-flush my-3\"\n        id=\"accordionFlushExample\"\n        style={Props.StyleVersion}\n      >\n        <div className=\"accordion-item\" style={Props.StyleVerion}>\n          <h2\n            className=\"accordion-header\"\n            id=\"flush-headingOne\"\n            style={Props.StyleVersion}\n          >\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseOne\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseOne\"\n              style={Props.StyleVersion}\n            >\n              What is TextUtility\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseOne\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingOne\"\n            data-bs-parent=\"#accordionFlushExample\"\n            style={Props.StyleVersion}\n          >\n            <div className=\"accordion-body \" style={Props.StyleVersion}>\n              TextUtility is a Web Based Apllication help you manipulate your\n              Text the way you want.It help User's to perform various task on\n              the Text and make it ready to be sent through any medium\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={Props.StyleVersion}>\n          <h2\n            className=\"accordion-header\"\n            id=\"flush-headingTwo\"\n            style={Props.StyleVersion}\n          >\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseTwo\"\n              style={Props.StyleVersion}\n            >\n              Who is the Founder of TextUtility\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingTwo\"\n            data-bs-parent=\"#accordionFlushExample\"\n            style={Props.StyleVersion}\n          >\n            <div className=\"accordion-body\" style={Props.StyleVersion}>\n              Placeholder content for this accordion, which is intended to\n              demonstrate the <code>.accordion-flush</code> class. This is the\n              second item's accordion body. Let's imagine this being filled with\n              some actual content.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={Props.StyleVersion}>\n          <h2\n            className=\"accordion-header\"\n            id=\"flush-headingThree\"\n            style={Props.StyleVersion}\n          >\n            <button\n              className=\"accordion-button collapsed \"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseThree\"\n              style={Props.StyleVersion}\n            >\n              What are Policies of TextUtility for User's Data Protection\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingThree\"\n            data-bs-parent=\"#accordionFlushExample\"\n            style={Props.StyleVersion}\n          >\n            <div className=\"accordion-body\" style={Props.StyleVersion}>\n              Placeholder content for this accordion, which is intended to\n              demonstrate the <code>.accordion-flush</code> class. This is the\n              third item's accordion body. Nothing more exciting happening here\n              in terms of content, but just filling up the space to make it\n              look, at least at first glance, a bit more representative of how\n              this would look in a real-world application.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./styles.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\n\nexport default function App() {\n  const [styleVersion, newStyle] = useState({\n    backgroundColor: \"white\",\n    color: \"black\"\n  });\n  let [btnmode, newbtnmode] = useState(\"Dark\");\n  function toggleStyle() {\n    if (styleVersion.backgroundColor !== \"#1c1d1f\") {\n      newStyle({\n        backgroundColor: \"white\",\n        color: \"#1c1d1f\"\n      });\n      newbtnmode(\"Dark\");\n    } else {\n      newStyle({\n        border: \"0.5px solid white\",\n        backgroundColor: \"#1c1d1f\",\n        color: \"white\"\n      });\n      newbtnmode(\"Light\");\n    }\n  }\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n\n  function showalert(message, type) {\n    setalert({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n  function changedesign(design) {\n    if (design === \"red\") {\n      document.body.style.backgroundColor = \"#fc0f03\";\n      setMode(\"danger\");\n      newStyle({\n        backgroundColor: \"red\",\n        color: \"swhite\"\n      });\n    } else if (design === \"green\") {\n      document.body.style.backgroundColor = \"#27b50b\";\n      setMode(\"success\");\n      newStyle({\n        backgroundColor: \"green\",\n        color: \"white\"\n      });\n    } else if (design === \"yellow\") {\n      document.body.style.backgroundColor = \"#c5d11b\";\n      setMode(\"warning\");\n      newStyle({\n        backgroundColor: \"yellow\",\n        color: \"white\"\n      });\n    }\n  }\n  function changeMode() {\n    if (mode !== \"dark\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#161716\";\n      document.title = \"Dark Mode\";\n      showalert(\"Dark Mode Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"Light Mode\";\n      showalert(\"Light Mode Enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"Text Corner \"\n          aboutText=\"About Myself\"\n          mode={mode}\n          changeMode={changeMode}\n          changedesign={changedesign}\n          toggleStyle={toggleStyle}\n        />\n        <div style={{ height: \"60px\" }}>\n          <Alert alert={alert} />\n        </div>\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/About\"\n              element={<About StyleVersion={styleVersion} />}\n            />\n            <Route\n              path=\"/\"\n              element={\n                <Textform\n                  showalert={showalert}\n                  heading=\"Enter Your's Text To Analyiz\"\n                  mode={mode}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}